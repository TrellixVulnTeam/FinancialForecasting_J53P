{"version":3,"sources":["./src/main/webapp/app/layouts/error/error.component.html","./src/main/webapp/app/layouts/error/error.component.ts","./src/main/webapp/app/shared/alert/alert.component.html","./src/main/webapp/app/shared/alert/alert.component.ts","./src/main/webapp/app/shared/auth/has-any-authority.directive.ts","./src/main/webapp/app/layouts/profiles/profile.service.ts","./src/main/webapp/app/core/util/alert.service.ts","./src/main/webapp/app/home/home.component.html","./src/main/webapp/app/home/home.component.ts","./src/main/webapp/app/layouts/profiles/page-ribbon.component.ts","./src/main/webapp/app/layouts/footer/footer.component.ts","./src/main/webapp/app/layouts/footer/footer.component.html","./src/main/webapp/app/entities/entity-routing.module.ts","./src/main/webapp/app/core/auth/user-route-access.service.ts","./src/main/webapp/app/shared/language/find-language-from-key.pipe.ts","./src/main/webapp/app/layouts/navbar/navbar.route.ts","./src/main/webapp/app/layouts/error/error.route.ts","./src/main/webapp/app/config/dayjs.ts","./src/main/webapp/app/layouts/navbar/navbar.component.ts","./src/main/webapp/app/layouts/navbar/navbar.component.html","./src/main/webapp/app/layouts/main/main.component.ts","./src/main/webapp/app/layouts/main/main.component.html","./src/main/webapp/app/core/auth/auth-session.service.ts","./src/main/webapp/app/config/datepicker-adapter.ts","./src/main/webapp/app/shared/sort/sort.directive.ts","./src/main/webapp/app/shared/pagination/item-count.component.ts","./src/main/webapp/app/shared/alert/alert-error.component.html","./src/main/webapp/app/shared/alert/alert-error.component.ts","./src/main/webapp/app/core/config/application-config.service.ts","./src/main/webapp/app/core/auth/account.service.ts","./src/main/webapp/app/core/interceptor/error-handler.interceptor.ts","./src/main/webapp/app/home/home.module.ts","./src/main/webapp/app/shared/sort/sort-by.directive.ts","./src/main/webapp/main.ts","./src/main/webapp/app/shared/language/translate.directive.ts","./src/main/webapp/app/shared/date/duration.pipe.ts","./src/main/webapp/app/config/font-awesome-icons.ts","./src/main/webapp/app/app-routing.module.ts","./src/main/webapp/app/shared/date/format-medium-date.pipe.ts","./src/main/webapp/app/login/login.service.ts","./src/main/webapp/app/shared/shared.module.ts","./src/main/webapp/app/core/auth/state-storage.service.ts","./src/main/webapp/app/core/interceptor/auth-expired.interceptor.ts","./src/main/webapp/app/core/util/event-manager.service.ts","./src/main/webapp/app/core/interceptor/notification.interceptor.ts","./src/main/webapp/app/app.constants.ts","./src/main/webapp/app/app.module.ts","./src/main/webapp/app/config/language.constants.ts","./src/main/webapp/app/shared/date/format-medium-datetime.pipe.ts","./src/main/webapp/app/home/home.route.ts","./src/main/webapp/app/shared/shared-libs.module.ts","./src/main/webapp/app/config/translation.config.ts","./src/main/webapp/app/core/interceptor/index.ts","./src/main/webapp/app/config/authority.constants.ts","./src/main/webapp/app/layouts/navbar/active-menu.directive.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <span class=\"hipster img-fluid rounded\"></span>\n    </div>\n\n    <div class=\"col-md-8\">\n      <h1 jhiTranslate=\"error.title\">Error Page!</h1>\n\n      <div *ngIf=\"errorMessage\">\n        <div class=\"alert alert-danger\">{{ errorMessage }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'jhi-error',\n  templateUrl: './error.component.html',\n})\nexport class ErrorComponent implements OnInit, OnDestroy {\n  errorMessage?: string;\n  errorKey?: string;\n  langChangeSubscription?: Subscription;\n\n  constructor(private translateService: TranslateService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      if (routeData.errorMessage) {\n        this.errorKey = routeData.errorMessage;\n        this.getErrorMessageTranslation();\n        this.langChangeSubscription = this.translateService.onLangChange.subscribe(() => this.getErrorMessageTranslation());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n  }\n\n  private getErrorMessageTranslation(): void {\n    this.errorMessage = '';\n    if (this.errorKey) {\n      this.translateService.get(this.errorKey).subscribe(translatedErrorMessage => {\n        this.errorMessage = translatedErrorMessage;\n      });\n    }\n  }\n}\n","<div class=\"alerts\" role=\"alert\">\n  <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n    <ngb-alert *ngIf=\"alert.message\" [type]=\"alert.type\" (closed)=\"close(alert)\">\n      <pre [innerHTML]=\"alert.message\"></pre>\n    </ngb-alert>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AlertService, Alert } from 'app/core/util/alert.service';\n\n@Component({\n  selector: 'jhi-alert',\n  templateUrl: './alert.component.html',\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n  alerts: Alert[] = [];\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit(): void {\n    this.alerts = this.alertService.get();\n  }\n\n  setClasses(alert: Alert): { [key: string]: boolean } {\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\n    if (alert.position) {\n      return { ...classes, [alert.position]: true };\n    }\n    return classes;\n  }\n\n  ngOnDestroy(): void {\n    this.alertService.clear();\n  }\n\n  close(alert: Alert): void {\n    alert.close?.(this.alerts);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n  selector: '[jhiHasAnyAuthority]',\n})\nexport class HasAnyAuthorityDirective implements OnDestroy {\n  private authorities!: string | string[];\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\n\n  @Input()\n  set jhiHasAnyAuthority(value: string | string[]) {\n    this.authorities = value;\n    this.updateView();\n    // Get notified each time authentication state changes.\n    this.accountService\n      .getAuthenticationState()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateView();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateView(): void {\n    const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n    this.viewContainerRef.clear();\n    if (hasAnyAuthority) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { ProfileInfo, InfoResponse } from './profile-info.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileService {\n  private infoUrl = this.applicationConfigService.getEndpointFor('management/info');\n  private profileInfo$?: Observable<ProfileInfo>;\n\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  getProfileInfo(): Observable<ProfileInfo> {\n    if (this.profileInfo$) {\n      return this.profileInfo$;\n    }\n\n    this.profileInfo$ = this.http.get<InfoResponse>(this.infoUrl).pipe(\n      map((response: InfoResponse) => {\n        const profileInfo: ProfileInfo = {\n          activeProfiles: response.activeProfiles,\n          inProduction: response.activeProfiles?.includes('prod'),\n          openAPIEnabled: response.activeProfiles?.includes('api-docs'),\n        };\n        if (response.activeProfiles && response['display-ribbon-on-profiles']) {\n          const displayRibbonOnProfiles = response['display-ribbon-on-profiles'].split(',');\n          const ribbonProfiles = displayRibbonOnProfiles.filter(profile => response.activeProfiles?.includes(profile));\n          if (ribbonProfiles.length > 0) {\n            profileInfo.ribbonEnv = ribbonProfiles[0];\n          }\n        }\n        return profileInfo;\n      }),\n      shareReplay()\n    );\n    return this.profileInfo$;\n  }\n}\n","import { Injectable, SecurityContext, NgZone } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { translationNotFoundMessage } from 'app/config/translation.config';\n\nexport type AlertType = 'success' | 'danger' | 'warning' | 'info';\n\nexport interface Alert {\n  id?: number;\n  type: AlertType;\n  message?: string;\n  translationKey?: string;\n  translationParams?: { [key: string]: unknown };\n  timeout?: number;\n  toast?: boolean;\n  position?: string;\n  close?: (alerts: Alert[]) => void;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  timeout = 5000;\n  toast = false;\n  position = 'top right';\n\n  // unique id for each alert. Starts from 0.\n  private alertId = 0;\n  private alerts: Alert[] = [];\n\n  constructor(private sanitizer: DomSanitizer, private ngZone: NgZone, private translateService: TranslateService) {}\n\n  clear(): void {\n    this.alerts = [];\n  }\n\n  get(): Alert[] {\n    return this.alerts;\n  }\n\n  /**\n   * Adds alert to alerts array and returns added alert.\n   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.\n   *                   If `translateKey` is available then it's translation else `message` is used for showing.\n   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.\n   *                   Else adding `alert` to `extAlerts`.\n   * @returns  Added alert\n   */\n  addAlert(alert: Alert, extAlerts?: Alert[]): Alert {\n    alert.id = this.alertId++;\n\n    if (alert.translationKey) {\n      const translatedMessage = this.translateService.instant(alert.translationKey, alert.translationParams);\n      // if translation key exists\n      if (translatedMessage !== `${translationNotFoundMessage}[${alert.translationKey}]`) {\n        alert.message = translatedMessage;\n      } else if (!alert.message) {\n        alert.message = alert.translationKey;\n      }\n    }\n\n    alert.message = this.sanitizer.sanitize(SecurityContext.HTML, alert.message ?? '') ?? '';\n    alert.timeout = alert.timeout ?? this.timeout;\n    alert.toast = alert.toast ?? this.toast;\n    alert.position = alert.position ?? this.position;\n    alert.close = (alertsArray: Alert[]) => this.closeAlert(alert.id!, alertsArray);\n\n    (extAlerts ?? this.alerts).push(alert);\n\n    if (alert.timeout > 0) {\n      // Workaround protractor waiting for setTimeout.\n      // Reference https://www.protractortest.org/#/timeouts\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.ngZone.run(() => {\n            this.closeAlert(alert.id!, extAlerts ?? this.alerts);\n          });\n        }, alert.timeout);\n      });\n    }\n\n    return alert;\n  }\n\n  private closeAlert(alertId: number, extAlerts?: Alert[]): void {\n    const alerts = extAlerts ?? this.alerts;\n    const alertIndex = alerts.map(alert => alert.id).indexOf(alertId);\n    // if found alert then remove\n    if (alertIndex >= 0) {\n      alerts.splice(alertIndex, 1);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-3\">\n    <span class=\"hipster img-fluid rounded\"></span>\n  </div>\n\n  <div class=\"col-md-9\">\n    <h1 class=\"display-4\" jhiTranslate=\"home.title\">Welcome, Java Hipster!</h1>\n\n    <p class=\"lead\" jhiTranslate=\"home.subtitle\">This is your homepage</p>\n\n    <div [ngSwitch]=\"isAuthenticated()\">\n      <div class=\"alert alert-success\" *ngSwitchCase=\"true\">\n        <span id=\"home-logged-message\" *ngIf=\"account\" jhiTranslate=\"home.logged.message\" [translateValues]=\"{ username: account.login }\"\n          >You are logged in as user \"{{ account.login }}\".</span\n        >\n      </div>\n\n      <div class=\"alert alert-warning\" *ngSwitchCase=\"false\">\n        <span jhiTranslate=\"global.messages.info.authenticated.prefix\">If you want to </span>\n        <a class=\"alert-link\" (click)=\"login()\" jhiTranslate=\"global.messages.info.authenticated.link\">sign in</a\n        ><span jhiTranslate=\"global.messages.info.authenticated.suffix\"\n          >, you can try the default accounts:<br />- Administrator (login=\"admin\" and password=\"admin\") <br />- User (login=\"user\" and\n          password=\"user\").</span\n        >\n      </div>\n    </div>\n\n    <p jhiTranslate=\"home.question\">If you have any question on JHipster:</p>\n\n    <ul>\n      <li>\n        <a href=\"https://www.jhipster.tech/\" target=\"_blank\" rel=\"noopener noreferrer\" jhiTranslate=\"home.link.homepage\"\n          >JHipster homepage</a\n        >\n      </li>\n      <li>\n        <a\n          href=\"http://stackoverflow.com/tags/jhipster/info\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          jhiTranslate=\"home.link.stackoverflow\"\n          >JHipster on Stack Overflow</a\n        >\n      </li>\n      <li>\n        <a\n          href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          jhiTranslate=\"home.link.bugtracker\"\n          >JHipster bug tracker</a\n        >\n      </li>\n      <li>\n        <a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\" rel=\"noopener noreferrer\" jhiTranslate=\"home.link.chat\"\n          >JHipster public chat room</a\n        >\n      </li>\n      <li>\n        <a href=\"https://twitter.com/jhipster\" target=\"_blank\" rel=\"noopener noreferrer\" jhiTranslate=\"home.link.follow\"\n          >follow @jhipster on Twitter</a\n        >\n      </li>\n    </ul>\n\n    <p>\n      <span jhiTranslate=\"home.like\">If you like JHipster, don't forget to give us a star on</span>\n      <a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\" rel=\"noopener noreferrer\" jhiTranslate=\"home.github\"\n        >GitHub</a\n      >!\n    </p>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\n\n@Component({\n  selector: 'jhi-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  account: Account | null = null;\n  authSubscription?: Subscription;\n\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authSubscription = this.accountService.getAuthenticationState().subscribe(account => (this.account = account));\n  }\n\n  isAuthenticated(): boolean {\n    return this.accountService.isAuthenticated();\n  }\n\n  login(): void {\n    this.router.navigate(['/login']);\n  }\n\n  ngOnDestroy(): void {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProfileService } from './profile.service';\n\n@Component({\n  selector: 'jhi-page-ribbon',\n  template: `\n    <div class=\"ribbon\" *ngIf=\"ribbonEnv$ | async as ribbonEnv\">\n      <a href=\"\" jhiTranslate=\"global.ribbon.{{ ribbonEnv }}\">{{ ribbonEnv }}</a>\n    </div>\n  `,\n  styleUrls: ['./page-ribbon.component.scss'],\n})\nexport class PageRibbonComponent implements OnInit {\n  ribbonEnv$?: Observable<string | undefined>;\n\n  constructor(private profileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.ribbonEnv$ = this.profileService.getProfileInfo().pipe(map(profileInfo => profileInfo.ribbonEnv));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'jhi-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent {}\n","<div class=\"footer\">\n  <p jhiTranslate=\"footer\">This is your footer</p>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      /* jhipster-needle-add-entity-route - JHipster will add entity modules routes here */\n    ]),\n  ],\n})\nexport class EntityRoutingModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { StateStorageService } from './state-storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserRouteAccessService implements CanActivate {\n  constructor(private router: Router, private accountService: AccountService, private stateStorageService: StateStorageService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.accountService.identity().pipe(\n      map(account => {\n        if (account) {\n          const authorities = route.data['authorities'];\n\n          if (!authorities || authorities.length === 0 || this.accountService.hasAnyAuthority(authorities)) {\n            return true;\n          }\n\n          if (isDevMode()) {\n            console.error('User has not any of required authorities: ', authorities);\n          }\n          this.router.navigate(['accessdenied']);\n          return false;\n        }\n\n        this.stateStorageService.storeUrl(state.url);\n        this.router.navigate(['/login']);\n        return false;\n      })\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'findLanguageFromKey' })\nexport class FindLanguageFromKeyPipe implements PipeTransform {\n  private languages: { [key: string]: { name: string; rtl?: boolean } } = {\n    en: { name: 'English' },\n    // jhipster-needle-i18n-language-key-pipe - JHipster will add/remove languages in this object\n  };\n\n  transform(lang: string): string {\n    return this.languages[lang].name;\n  }\n}\n","import { Route } from '@angular/router';\n\nimport { NavbarComponent } from './navbar.component';\n\nexport const navbarRoute: Route = {\n  path: '',\n  component: NavbarComponent,\n  outlet: 'navbar',\n};\n","import { Routes } from '@angular/router';\n\nimport { ErrorComponent } from './error.component';\n\nexport const errorRoute: Routes = [\n  {\n    path: 'error',\n    component: ErrorComponent,\n    data: {\n      pageTitle: 'error.title',\n    },\n  },\n  {\n    path: 'accessdenied',\n    component: ErrorComponent,\n    data: {\n      pageTitle: 'error.title',\n      errorMessage: 'error.http.403',\n    },\n  },\n  {\n    path: '404',\n    component: ErrorComponent,\n    data: {\n      pageTitle: 'error.title',\n      errorMessage: 'error.http.404',\n    },\n  },\n  {\n    path: '**',\n    redirectTo: '/404',\n  },\n];\n","import * as dayjs from 'dayjs';\nimport * as customParseFormat from 'dayjs/plugin/customParseFormat';\nimport * as duration from 'dayjs/plugin/duration';\nimport * as relativeTime from 'dayjs/plugin/relativeTime';\n\n// jhipster-needle-i18n-language-dayjs-imports - JHipster will import languages from dayjs here\nimport 'dayjs/locale/en';\n\n// DAYJS CONFIGURATION\ndayjs.extend(customParseFormat);\ndayjs.extend(duration);\ndayjs.extend(relativeTime);\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SessionStorageService } from 'ngx-webstorage';\n\nimport { VERSION } from 'app/app.constants';\nimport { LANGUAGES } from 'app/config/language.constants';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { LoginService } from 'app/login/login.service';\nimport { ProfileService } from 'app/layouts/profiles/profile.service';\n\n@Component({\n  selector: 'jhi-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  inProduction?: boolean;\n  isNavbarCollapsed = true;\n  languages = LANGUAGES;\n  openAPIEnabled?: boolean;\n  version = '';\n\n  constructor(\n    private loginService: LoginService,\n    private translateService: TranslateService,\n    private sessionStorage: SessionStorageService,\n    private accountService: AccountService,\n    private profileService: ProfileService,\n    private router: Router\n  ) {\n    if (VERSION) {\n      this.version = VERSION.toLowerCase().startsWith('v') ? VERSION : 'v' + VERSION;\n    }\n  }\n\n  ngOnInit(): void {\n    this.profileService.getProfileInfo().subscribe(profileInfo => {\n      this.inProduction = profileInfo.inProduction;\n      this.openAPIEnabled = profileInfo.openAPIEnabled;\n    });\n  }\n\n  changeLanguage(languageKey: string): void {\n    this.sessionStorage.store('locale', languageKey);\n    this.translateService.use(languageKey);\n  }\n\n  collapseNavbar(): void {\n    this.isNavbarCollapsed = true;\n  }\n\n  isAuthenticated(): boolean {\n    return this.accountService.isAuthenticated();\n  }\n\n  login(): void {\n    this.router.navigate(['/login']);\n  }\n\n  logout(): void {\n    this.collapseNavbar();\n    this.loginService.logout();\n    this.router.navigate(['']);\n  }\n\n  toggleNavbar(): void {\n    this.isNavbarCollapsed = !this.isNavbarCollapsed;\n  }\n\n  getImageUrl(): string {\n    return this.isAuthenticated() ? this.accountService.getImageUrl() : '';\n  }\n}\n","<nav data-cy=\"navbar\" class=\"navbar navbar-dark navbar-expand-md bg-dark\">\n  <a class=\"navbar-brand logo\" routerLink=\"/\" (click)=\"collapseNavbar()\">\n    <span class=\"logo-img\"></span>\n    <span jhiTranslate=\"global.title\" class=\"navbar-title\">PlaceholderAPI</span>\n    <span class=\"navbar-version\">{{ version }}</span>\n  </a>\n  <a\n    class=\"navbar-toggler d-lg-none\"\n    href=\"javascript:void(0);\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarResponsive\"\n    aria-controls=\"navbarResponsive\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n    (click)=\"toggleNavbar()\"\n  >\n    <fa-icon icon=\"bars\"></fa-icon>\n  </a>\n  <div class=\"navbar-collapse collapse\" id=\"navbarResponsive\" [ngbCollapse]=\"isNavbarCollapsed\" [ngSwitch]=\"isAuthenticated()\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a class=\"nav-link\" routerLink=\"/\" (click)=\"collapseNavbar()\">\n          <span>\n            <fa-icon icon=\"home\"></fa-icon>\n            <span jhiTranslate=\"global.menu.home\">Home</span>\n          </span>\n        </a>\n      </li>\n      <!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here -->\n      <li\n        *ngSwitchCase=\"true\"\n        ngbDropdown\n        class=\"nav-item dropdown pointer\"\n        display=\"dynamic\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"entity-menu\" data-cy=\"entity\">\n          <span>\n            <fa-icon icon=\"th-list\"></fa-icon>\n            <span jhiTranslate=\"global.menu.entities.main\">Entities</span>\n          </span>\n        </a>\n        <ul class=\"dropdown-menu\" ngbDropdownMenu aria-labelledby=\"entity-menu\">\n          <!-- jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here -->\n        </ul>\n      </li>\n      <li\n        *jhiHasAnyAuthority=\"'ROLE_ADMIN'\"\n        ngbDropdown\n        class=\"nav-item dropdown pointer\"\n        display=\"dynamic\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"admin-menu\" data-cy=\"adminMenu\">\n          <span>\n            <fa-icon icon=\"users-cog\"></fa-icon>\n            <span jhiTranslate=\"global.menu.admin.main\">Administration</span>\n          </span>\n        </a>\n        <ul class=\"dropdown-menu\" ngbDropdownMenu aria-labelledby=\"admin-menu\">\n          <li>\n            <a class=\"dropdown-item\" routerLink=\"admin/metrics\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n              <fa-icon icon=\"tachometer-alt\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.admin.metrics\">Metrics</span>\n            </a>\n          </li>\n          <li>\n            <a class=\"dropdown-item\" routerLink=\"admin/health\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n              <fa-icon icon=\"heart\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.admin.health\">Health</span>\n            </a>\n          </li>\n          <li>\n            <a class=\"dropdown-item\" routerLink=\"admin/configuration\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n              <fa-icon icon=\"cogs\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.admin.configuration\">Configuration</span>\n            </a>\n          </li>\n          <li>\n            <a class=\"dropdown-item\" routerLink=\"admin/logs\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n              <fa-icon icon=\"tasks\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.admin.logs\">Logs</span>\n            </a>\n          </li>\n          <li *ngIf=\"openAPIEnabled\">\n            <a class=\"dropdown-item\" routerLink=\"admin/docs\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n              <fa-icon icon=\"book\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.admin.apidocs\">API</span>\n            </a>\n          </li>\n          <!-- jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here -->\n        </ul>\n      </li>\n      <li ngbDropdown class=\"nav-item dropdown pointer\" display=\"dynamic\" *ngIf=\"languages && languages.length > 1\">\n        <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"languagesnavBarDropdown\">\n          <span>\n            <fa-icon icon=\"flag\"></fa-icon>\n            <span jhiTranslate=\"global.menu.language\">Language</span>\n          </span>\n        </a>\n        <ul class=\"dropdown-menu\" ngbDropdownMenu aria-labelledby=\"languagesnavBarDropdown\">\n          <li *ngFor=\"let language of languages\">\n            <a\n              class=\"dropdown-item\"\n              [jhiActiveMenu]=\"language\"\n              href=\"javascript:void(0);\"\n              (click)=\"changeLanguage(language); collapseNavbar()\"\n              >{{ language | findLanguageFromKey }}</a\n            >\n          </li>\n        </ul>\n      </li>\n      <li\n        ngbDropdown\n        class=\"nav-item dropdown pointer\"\n        display=\"dynamic\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"account-menu\" data-cy=\"accountMenu\">\n          <span *ngIf=\"!getImageUrl()\">\n            <fa-icon icon=\"user\"></fa-icon>\n            <span jhiTranslate=\"global.menu.account.main\">Account</span>\n          </span>\n          <span *ngIf=\"getImageUrl()\">\n            <img [src]=\"getImageUrl()\" class=\"profile-image rounded-circle\" alt=\"Avatar\" />\n          </span>\n        </a>\n        <ul class=\"dropdown-menu\" ngbDropdownMenu aria-labelledby=\"account-menu\">\n          <li *ngSwitchCase=\"true\">\n            <a class=\"dropdown-item\" (click)=\"logout()\" id=\"logout\" data-cy=\"logout\">\n              <fa-icon icon=\"sign-out-alt\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.account.logout\">Sign out</span>\n            </a>\n          </li>\n          <li *ngSwitchCase=\"false\">\n            <a class=\"dropdown-item\" (click)=\"login()\" id=\"login\" data-cy=\"login\">\n              <fa-icon icon=\"sign-in-alt\" [fixedWidth]=\"true\"></fa-icon>\n              <span jhiTranslate=\"global.menu.account.login\">Sign in</span>\n            </a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit, RendererFactory2, Renderer2 } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRouteSnapshot, NavigationEnd, NavigationError } from '@angular/router';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport * as dayjs from 'dayjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\n@Component({\n  selector: 'jhi-main',\n  templateUrl: './main.component.html',\n})\nexport class MainComponent implements OnInit {\n  private renderer: Renderer2;\n\n  constructor(\n    private accountService: AccountService,\n    private titleService: Title,\n    private router: Router,\n    private translateService: TranslateService,\n    rootRenderer: RendererFactory2\n  ) {\n    this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\n  }\n\n  ngOnInit(): void {\n    // try to log in automatically\n    this.accountService.identity().subscribe();\n\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateTitle();\n      }\n      if (event instanceof NavigationError && event.error.status === 404) {\n        this.router.navigate(['/404']);\n      }\n    });\n\n    this.translateService.onLangChange.subscribe((langChangeEvent: LangChangeEvent) => {\n      this.updateTitle();\n      dayjs.locale(langChangeEvent.lang);\n      this.renderer.setAttribute(document.querySelector('html'), 'lang', langChangeEvent.lang);\n    });\n  }\n\n  private getPageTitle(routeSnapshot: ActivatedRouteSnapshot): string {\n    let title: string = routeSnapshot.data['pageTitle'] ?? '';\n    if (routeSnapshot.firstChild) {\n      title = this.getPageTitle(routeSnapshot.firstChild) || title;\n    }\n    return title;\n  }\n\n  private updateTitle(): void {\n    let pageTitle = this.getPageTitle(this.router.routerState.snapshot.root);\n    if (!pageTitle) {\n      pageTitle = 'global.title';\n    }\n    this.translateService.get(pageTitle).subscribe(title => this.titleService.setTitle(title));\n  }\n}\n","<jhi-page-ribbon></jhi-page-ribbon>\n\n<div>\n  <router-outlet name=\"navbar\"></router-outlet>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"card jh-card\">\n    <router-outlet></router-outlet>\n  </div>\n\n  <jhi-footer></jhi-footer>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { Login } from 'app/login/login.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthServerProvider {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  login(credentials: Login): Observable<{}> {\n    const data =\n      `username=${encodeURIComponent(credentials.username)}` +\n      `&password=${encodeURIComponent(credentials.password)}` +\n      `&remember-me=${credentials.rememberMe ? 'true' : 'false'}` +\n      '&submit=Login';\n\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(this.applicationConfigService.getEndpointFor('api/authentication'), data, { headers });\n  }\n\n  logout(): Observable<void> {\n    // logout from the server\n    return this.http.post(this.applicationConfigService.getEndpointFor('api/logout'), {}).pipe(\n      map(() => {\n        // to get a new csrf token call the api\n        this.http.get(this.applicationConfigService.getEndpointFor('api/account')).subscribe();\n      })\n    );\n  }\n}\n","/**\n * Angular bootstrap Date adapter\n */\nimport { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport * as dayjs from 'dayjs';\n\n@Injectable()\nexport class NgbDateDayjsAdapter extends NgbDateAdapter<dayjs.Dayjs> {\n  fromModel(date: dayjs.Dayjs | null): NgbDateStruct | null {\n    if (date && dayjs.isDayjs(date) && date.isValid()) {\n      return { year: date.year(), month: date.month() + 1, day: date.date() };\n    }\n    return null;\n  }\n\n  toModel(date: NgbDateStruct | null): dayjs.Dayjs | null {\n    return date ? dayjs(`${date.year}-${date.month}-${date.day}`) : null;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[jhiSort]',\n})\nexport class SortDirective<T> {\n  @Input()\n  get predicate(): T | undefined {\n    return this._predicate;\n  }\n  set predicate(predicate: T | undefined) {\n    this._predicate = predicate;\n    this.predicateChange.emit(predicate);\n  }\n\n  @Input()\n  get ascending(): boolean | undefined {\n    return this._ascending;\n  }\n  set ascending(ascending: boolean | undefined) {\n    this._ascending = ascending;\n    this.ascendingChange.emit(ascending);\n  }\n\n  @Input() callback?: () => void;\n\n  @Output() predicateChange = new EventEmitter<T>();\n  @Output() ascendingChange = new EventEmitter<boolean>();\n\n  private _predicate?: T;\n  private _ascending?: boolean;\n\n  sort(field?: T): void {\n    if (String(this.predicate) !== '_score') {\n      this.ascending = field !== this.predicate ? true : !this.ascending;\n      this.predicate = field;\n      this.predicateChange.emit(field);\n      this.ascendingChange.emit(this.ascending);\n      this.callback?.();\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * A component that will take care of item count statistics of a pagination.\n */\n@Component({\n  selector: 'jhi-item-count',\n  template: ` <div jhiTranslate=\"global.item-count\" [translateValues]=\"{ first: first, second: second, total: total }\"></div> `,\n})\nexport class ItemCountComponent {\n  /**\n   * @param params  Contains parameters for component:\n   *                    page          Current page number\n   *                    totalItems    Total number of items\n   *                    itemsPerPage  Number of items per page\n   */\n  @Input() set params(params: { page?: number; totalItems?: number; itemsPerPage?: number }) {\n    if (params.page !== undefined && params.totalItems !== undefined && params.itemsPerPage !== undefined) {\n      this.first = (params.page - 1) * params.itemsPerPage === 0 ? 1 : (params.page - 1) * params.itemsPerPage + 1;\n      this.second = params.page * params.itemsPerPage < params.totalItems ? params.page * params.itemsPerPage : params.totalItems;\n    } else {\n      this.first = undefined;\n      this.second = undefined;\n    }\n    this.total = params.totalItems;\n  }\n\n  first?: number;\n  second?: number;\n  total?: number;\n}\n","<div class=\"alerts\" role=\"alert\">\n  <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n    <ngb-alert *ngIf=\"alert.message\" [type]=\"alert.type\" (closed)=\"close(alert)\">\n      <pre [innerHTML]=\"alert.message\"></pre>\n    </ngb-alert>\n  </div>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { AlertError } from './alert-error.model';\nimport { Alert, AlertService } from 'app/core/util/alert.service';\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\n\n@Component({\n  selector: 'jhi-alert-error',\n  templateUrl: './alert-error.component.html',\n})\nexport class AlertErrorComponent implements OnDestroy {\n  alerts: Alert[] = [];\n  errorListener: Subscription;\n  httpErrorListener: Subscription;\n\n  constructor(private alertService: AlertService, private eventManager: EventManager, translateService: TranslateService) {\n    this.errorListener = eventManager.subscribe('placeholderApiApp.error', (response: EventWithContent<unknown> | string) => {\n      const errorResponse = (response as EventWithContent<AlertError>).content;\n      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);\n    });\n\n    this.httpErrorListener = eventManager.subscribe('placeholderApiApp.httpError', (response: EventWithContent<unknown> | string) => {\n      const httpErrorResponse = (response as EventWithContent<HttpErrorResponse>).content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader: string | null = null;\n          let entityKey: string | null = null;\n          for (const entry of arr) {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          }\n          if (errorHeader) {\n            const alertData = entityKey ? { entityName: translateService.instant(`global.menu.entities.${entityKey}`) } : undefined;\n            this.addErrorAlert(errorHeader, errorHeader, alertData);\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (const fieldError of fieldErrors) {\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField: string = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName: string = translateService.instant(`placeholderApiApp.${fieldError.objectName as string}.${convertedField}`);\n              this.addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message as string}`, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(\n              httpErrorResponse.error.detail ?? httpErrorResponse.error.message,\n              httpErrorResponse.error.message,\n              httpErrorResponse.error.params\n            );\n          } else {\n            this.addErrorAlert(httpErrorResponse.error, httpErrorResponse.error);\n          }\n          break;\n        }\n\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(\n              httpErrorResponse.error.detail ?? httpErrorResponse.error.message,\n              httpErrorResponse.error.message,\n              httpErrorResponse.error.params\n            );\n          } else {\n            this.addErrorAlert(httpErrorResponse.error, httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert: Alert): { [key: string]: boolean } {\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\n    if (alert.position) {\n      return { ...classes, [alert.position]: true };\n    }\n    return classes;\n  }\n\n  ngOnDestroy(): void {\n    this.eventManager.destroy(this.errorListener);\n    this.eventManager.destroy(this.httpErrorListener);\n  }\n\n  close(alert: Alert): void {\n    alert.close?.(this.alerts);\n  }\n\n  private addErrorAlert(message?: string, translationKey?: string, translationParams?: { [key: string]: unknown }): void {\n    this.alertService.addAlert({ type: 'danger', message, translationKey, translationParams }, this.alerts);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApplicationConfigService {\n  private endpointPrefix = '';\n\n  setEndpointPrefix(endpointPrefix: string): void {\n    this.endpointPrefix = endpointPrefix;\n  }\n\n  getEndpointFor(api: string, microservice?: string): string {\n    if (microservice) {\n      return `${this.endpointPrefix}services/${microservice}/${api}`;\n    }\n    return `${this.endpointPrefix}${api}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { Observable, ReplaySubject, of } from 'rxjs';\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\n\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { Account } from 'app/core/auth/account.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: Account | null = null;\n  private authenticationState = new ReplaySubject<Account | null>(1);\n  private accountCache$?: Observable<Account | null>;\n\n  constructor(\n    private translateService: TranslateService,\n    private sessionStorage: SessionStorageService,\n    private http: HttpClient,\n    private stateStorageService: StateStorageService,\n    private router: Router,\n    private applicationConfigService: ApplicationConfigService\n  ) {}\n\n  authenticate(identity: Account | null): void {\n    this.userIdentity = identity;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[] | string): boolean {\n    if (!this.userIdentity) {\n      return false;\n    }\n    if (!Array.isArray(authorities)) {\n      authorities = [authorities];\n    }\n    return this.userIdentity.authorities.some((authority: string) => authorities.includes(authority));\n  }\n\n  identity(force?: boolean): Observable<Account | null> {\n    if (!this.accountCache$ || force || !this.isAuthenticated()) {\n      this.accountCache$ = this.fetch().pipe(\n        catchError(() => of(null)),\n        tap((account: Account | null) => {\n          this.authenticate(account);\n\n          // After retrieve the account info, the language will be changed to\n          // the user's preferred language configured in the account setting\n          if (account?.langKey) {\n            const langKey = this.sessionStorage.retrieve('locale') ?? account.langKey;\n            this.translateService.use(langKey);\n          }\n\n          if (account) {\n            this.navigateToStoredUrl();\n          }\n        }),\n        shareReplay()\n      );\n    }\n    return this.accountCache$;\n  }\n\n  isAuthenticated(): boolean {\n    return this.userIdentity !== null;\n  }\n\n  getAuthenticationState(): Observable<Account | null> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.userIdentity?.imageUrl ?? '';\n  }\n\n  private fetch(): Observable<Account> {\n    return this.http.get<Account>(this.applicationConfigService.getEndpointFor('api/account'));\n  }\n\n  private navigateToStoredUrl(): void {\n    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService\n    // if login is successful, go to stored previousState and clear previousState\n    const previousUrl = this.stateStorageService.getUrl();\n    if (previousUrl) {\n      this.stateStorageService.clearUrl();\n      this.router.navigateByUrl(previousUrl);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(private eventManager: EventManager) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap({\n        error: (err: HttpErrorResponse) => {\n          if (!(err.status === 401 && (err.message === '' || err.url?.includes('api/account')))) {\n            this.eventManager.broadcast(new EventWithContent('placeholderApiApp.httpError', err));\n          }\n        },\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { HOME_ROUTE } from './home.route';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild([HOME_ROUTE])],\n  declarations: [HomeComponent],\n})\nexport class HomeModule {}\n","import { AfterContentInit, ContentChild, Directive, Host, HostListener, Input, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\nimport { faSort, faSortDown, faSortUp, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\nimport { SortDirective } from './sort.directive';\n\n@Directive({\n  selector: '[jhiSortBy]',\n})\nexport class SortByDirective<T> implements AfterContentInit, OnDestroy {\n  @Input() jhiSortBy?: T;\n\n  @ContentChild(FaIconComponent, { static: true })\n  iconComponent?: FaIconComponent;\n\n  sortIcon = faSort;\n  sortAscIcon = faSortUp;\n  sortDescIcon = faSortDown;\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(@Host() private sort: SortDirective<T>) {\n    sort.predicateChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n    sort.ascendingChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\n  }\n\n  @HostListener('click')\n  onClick(): void {\n    this.sort.sort(this.jhiSortBy);\n  }\n\n  ngAfterContentInit(): void {\n    this.updateIconDefinition();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateIconDefinition(): void {\n    if (this.iconComponent) {\n      let icon: IconDefinition = this.sortIcon;\n      if (this.sort.predicate === this.jhiSortBy) {\n        icon = this.sort.ascending ? this.sortAscIcon : this.sortDescIcon;\n      }\n      this.iconComponent.icon = icon.iconName;\n      this.iconComponent.render();\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { DEBUG_INFO_ENABLED } from './app/app.constants';\nimport { AppModule } from './app/app.module';\n\n// disable debug data on prod profile to improve performance\nif (!DEBUG_INFO_ENABLED) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule, { preserveWhitespaces: true })\n  // eslint-disable-next-line no-console\n  .then(() => console.log('Application started'))\n  .catch(err => console.error(err));\n","import { Input, Directive, ElementRef, OnChanges, OnInit, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { translationNotFoundMessage } from 'app/config/translation.config';\n\n/**\n * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy\n */\n@Directive({\n  selector: '[jhiTranslate]',\n})\nexport class TranslateDirective implements OnChanges, OnInit, OnDestroy {\n  @Input() jhiTranslate!: string;\n  @Input() translateValues?: { [key: string]: unknown };\n\n  private readonly directiveDestroyed = new Subject<never>();\n\n  constructor(private el: ElementRef, private translateService: TranslateService) {}\n\n  ngOnInit(): void {\n    this.translateService.onLangChange.pipe(takeUntil(this.directiveDestroyed)).subscribe(() => {\n      this.getTranslation();\n    });\n  }\n\n  ngOnChanges(): void {\n    this.getTranslation();\n  }\n\n  ngOnDestroy(): void {\n    this.directiveDestroyed.next();\n    this.directiveDestroyed.complete();\n  }\n\n  private getTranslation(): void {\n    this.translateService\n      .get(this.jhiTranslate, this.translateValues)\n      .pipe(takeUntil(this.directiveDestroyed))\n      .subscribe(\n        value => {\n          this.el.nativeElement.innerHTML = value;\n        },\n        () => `${translationNotFoundMessage}[${this.jhiTranslate}]`\n      );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as dayjs from 'dayjs';\n\n@Pipe({\n  name: 'duration',\n})\nexport class DurationPipe implements PipeTransform {\n  transform(value: any): string {\n    if (value) {\n      return dayjs.duration(value).humanize();\n    }\n    return '';\n  }\n}\n","import {\n  faArrowLeft,\n  faAsterisk,\n  faBan,\n  faBars,\n  faBell,\n  faBook,\n  faCalendarAlt,\n  faCheck,\n  faCloud,\n  faCogs,\n  faDatabase,\n  faEye,\n  faFlag,\n  faHeart,\n  faHome,\n  faList,\n  faLock,\n  faPencilAlt,\n  faPlus,\n  faRoad,\n  faSave,\n  faSearch,\n  faSignOutAlt,\n  faSignInAlt,\n  faSort,\n  faSortDown,\n  faSortUp,\n  faSync,\n  faTachometerAlt,\n  faTasks,\n  faThList,\n  faTimes,\n  faTrashAlt,\n  faUser,\n  faUserPlus,\n  faUsers,\n  faUsersCog,\n  faWrench,\n  // jhipster-needle-add-icon-import\n} from '@fortawesome/free-solid-svg-icons';\n\nexport const fontAwesomeIcons = [\n  faArrowLeft,\n  faAsterisk,\n  faBan,\n  faBars,\n  faBell,\n  faBook,\n  faCalendarAlt,\n  faCheck,\n  faCloud,\n  faCogs,\n  faDatabase,\n  faEye,\n  faFlag,\n  faHeart,\n  faHome,\n  faList,\n  faLock,\n  faPencilAlt,\n  faPlus,\n  faRoad,\n  faSave,\n  faSearch,\n  faSignOutAlt,\n  faSignInAlt,\n  faSort,\n  faSortDown,\n  faSortUp,\n  faSync,\n  faTachometerAlt,\n  faTasks,\n  faThList,\n  faTimes,\n  faTrashAlt,\n  faUser,\n  faUserPlus,\n  faUsers,\n  faUsersCog,\n  faWrench,\n  // jhipster-needle-add-icon-import\n];\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { errorRoute } from './layouts/error/error.route';\nimport { navbarRoute } from './layouts/navbar/navbar.route';\nimport { DEBUG_INFO_ENABLED } from 'app/app.constants';\nimport { Authority } from 'app/config/authority.constants';\n\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\n\nconst LAYOUT_ROUTES = [navbarRoute, ...errorRoute];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      [\n        {\n          path: 'admin',\n          data: {\n            authorities: [Authority.ADMIN],\n          },\n          canActivate: [UserRouteAccessService],\n          loadChildren: () => import('./admin/admin-routing.module').then(m => m.AdminRoutingModule),\n        },\n        {\n          path: 'login',\n          loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\n        },\n        ...LAYOUT_ROUTES,\n      ],\n      { enableTracing: DEBUG_INFO_ENABLED }\n    ),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as dayjs from 'dayjs';\n\n@Pipe({\n  name: 'formatMediumDate',\n})\nexport class FormatMediumDatePipe implements PipeTransform {\n  transform(day: dayjs.Dayjs | null | undefined): string {\n    return day ? day.format('D MMM YYYY') : '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { Account } from 'app/core/auth/account.model';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { AuthServerProvider } from 'app/core/auth/auth-session.service';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { Login } from './login.model';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n  constructor(\n    private applicationConfigService: ApplicationConfigService,\n    private accountService: AccountService,\n    private authServerProvider: AuthServerProvider\n  ) {}\n\n  login(credentials: Login): Observable<Account | null> {\n    return this.authServerProvider.login(credentials).pipe(mergeMap(() => this.accountService.identity(true)));\n  }\n\n  logoutUrl(): string {\n    return this.applicationConfigService.getEndpointFor('api/logout');\n  }\n\n  logoutInClient(): void {\n    this.accountService.authenticate(null);\n  }\n\n  logout(): void {\n    this.authServerProvider.logout().subscribe({ complete: () => this.accountService.authenticate(null) });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedLibsModule } from './shared-libs.module';\nimport { FindLanguageFromKeyPipe } from './language/find-language-from-key.pipe';\nimport { TranslateDirective } from './language/translate.directive';\nimport { AlertComponent } from './alert/alert.component';\nimport { AlertErrorComponent } from './alert/alert-error.component';\nimport { HasAnyAuthorityDirective } from './auth/has-any-authority.directive';\nimport { DurationPipe } from './date/duration.pipe';\nimport { FormatMediumDatetimePipe } from './date/format-medium-datetime.pipe';\nimport { FormatMediumDatePipe } from './date/format-medium-date.pipe';\nimport { SortByDirective } from './sort/sort-by.directive';\nimport { SortDirective } from './sort/sort.directive';\nimport { ItemCountComponent } from './pagination/item-count.component';\n\n@NgModule({\n  imports: [SharedLibsModule],\n  declarations: [\n    FindLanguageFromKeyPipe,\n    TranslateDirective,\n    AlertComponent,\n    AlertErrorComponent,\n    HasAnyAuthorityDirective,\n    DurationPipe,\n    FormatMediumDatetimePipe,\n    FormatMediumDatePipe,\n    SortByDirective,\n    SortDirective,\n    ItemCountComponent,\n  ],\n  exports: [\n    SharedLibsModule,\n    FindLanguageFromKeyPipe,\n    TranslateDirective,\n    AlertComponent,\n    AlertErrorComponent,\n    HasAnyAuthorityDirective,\n    DurationPipe,\n    FormatMediumDatetimePipe,\n    FormatMediumDatePipe,\n    SortByDirective,\n    SortDirective,\n    ItemCountComponent,\n  ],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { SessionStorageService } from 'ngx-webstorage';\n\n@Injectable({ providedIn: 'root' })\nexport class StateStorageService {\n  private previousUrlKey = 'previousUrl';\n\n  constructor(private $sessionStorage: SessionStorageService) {}\n\n  storeUrl(url: string): void {\n    this.$sessionStorage.store(this.previousUrlKey, url);\n  }\n\n  getUrl(): string | null {\n    return this.$sessionStorage.retrieve(this.previousUrlKey) as string | null;\n  }\n\n  clearUrl(): void {\n    this.$sessionStorage.clear(this.previousUrlKey);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from 'app/login/login.service';\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\nimport { AccountService } from 'app/core/auth/account.service';\n\n@Injectable()\nexport class AuthExpiredInterceptor implements HttpInterceptor {\n  constructor(\n    private loginService: LoginService,\n    private stateStorageService: StateStorageService,\n    private router: Router,\n    private accountService: AccountService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap({\n        error: (err: HttpErrorResponse) => {\n          if (err.status === 401 && err.url && !err.url.includes('api/account') && this.accountService.isAuthenticated()) {\n            if (err.url.includes(this.loginService.logoutUrl())) {\n              this.loginService.logoutInClient();\n              return;\n            }\n            this.stateStorageService.storeUrl(this.router.routerState.snapshot.url);\n            this.loginService.logout();\n            this.router.navigate(['/login']);\n          }\n        },\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, share } from 'rxjs/operators';\n\nexport class EventWithContent<T> {\n  constructor(public name: string, public content: T) {}\n}\n\n/**\n * An utility class to manage RX events\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventManager {\n  observable: Observable<EventWithContent<unknown> | string>;\n  observer?: Observer<EventWithContent<unknown> | string>;\n\n  constructor() {\n    this.observable = new Observable((observer: Observer<EventWithContent<unknown> | string>) => {\n      this.observer = observer;\n    }).pipe(share());\n  }\n\n  /**\n   * Method to broadcast the event to observer\n   */\n  broadcast(event: EventWithContent<unknown> | string): void {\n    if (this.observer) {\n      this.observer.next(event);\n    }\n  }\n\n  /**\n   * Method to subscribe to an event with callback\n   * @param eventNames  Single event name or array of event names to what subscribe\n   * @param callback    Callback to run when the event occurs\n   */\n  subscribe(eventNames: string | string[], callback: (event: EventWithContent<unknown> | string) => void): Subscription {\n    if (typeof eventNames === 'string') {\n      eventNames = [eventNames];\n    }\n    return this.observable\n      .pipe(\n        filter((event: EventWithContent<unknown> | string) => {\n          for (const eventName of eventNames) {\n            if ((typeof event === 'string' && event === eventName) || (typeof event !== 'string' && event.name === eventName)) {\n              return true;\n            }\n          }\n          return false;\n        })\n      )\n      .subscribe(callback);\n  }\n\n  /**\n   * Method to unsubscribe the subscription\n   */\n  destroy(subscriber: Subscription): void {\n    subscriber.unsubscribe();\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AlertService } from 'app/core/util/alert.service';\n\n@Injectable()\nexport class NotificationInterceptor implements HttpInterceptor {\n  constructor(private alertService: AlertService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          let alert: string | null = null;\n          let alertParams: string | null = null;\n\n          for (const headerKey of event.headers.keys()) {\n            if (headerKey.toLowerCase().endsWith('app-alert')) {\n              alert = event.headers.get(headerKey);\n            } else if (headerKey.toLowerCase().endsWith('app-params')) {\n              alertParams = decodeURIComponent(event.headers.get(headerKey)!.replace(/\\+/g, ' '));\n            }\n          }\n\n          if (alert) {\n            this.alertService.addAlert({\n              type: 'success',\n              translationKey: alert,\n              translationParams: { param: alertParams },\n            });\n          }\n        }\n      })\n    );\n  }\n}\n","// These constants are injected via webpack environment variables.\n// You can add more variables in webpack.common.js or in profile specific webpack.<dev|prod>.js files.\n// If you change the values in the webpack config files, you need to re run webpack to update the application\n\nexport const VERSION = process.env.VERSION;\nexport const DEBUG_INFO_ENABLED = Boolean(process.env.DEBUG_INFO_ENABLED);\nexport const SERVER_API_URL = process.env.SERVER_API_URL ?? '';\nexport const BUILD_TIMESTAMP = process.env.BUILD_TIMESTAMP;\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport locale from '@angular/common/locales/en';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { TranslateModule, TranslateService, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport * as dayjs from 'dayjs';\nimport { NgbDateAdapter, NgbDatepickerConfig } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SERVER_API_URL } from './app.constants';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport './config/dayjs';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeModule } from './home/home.module';\nimport { EntityRoutingModule } from './entities/entity-routing.module';\n// jhipster-needle-angular-add-module-import JHipster will add new module here\nimport { NgbDateDayjsAdapter } from './config/datepicker-adapter';\nimport { fontAwesomeIcons } from './config/font-awesome-icons';\nimport { httpInterceptorProviders } from 'app/core/interceptor/index';\nimport { translatePartialLoader, missingTranslationHandler } from './config/translation.config';\nimport { MainComponent } from './layouts/main/main.component';\nimport { NavbarComponent } from './layouts/navbar/navbar.component';\nimport { FooterComponent } from './layouts/footer/footer.component';\nimport { PageRibbonComponent } from './layouts/profiles/page-ribbon.component';\nimport { ActiveMenuDirective } from './layouts/navbar/active-menu.directive';\nimport { ErrorComponent } from './layouts/error/error.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    SharedModule,\n    HomeModule,\n    // jhipster-needle-angular-add-module JHipster will add new module here\n    EntityRoutingModule,\n    AppRoutingModule,\n    // Set this to true to enable service worker (PWA)\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: false }),\n    HttpClientModule,\n    NgxWebstorageModule.forRoot({ prefix: 'jhi', separator: '-', caseSensitive: true }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: translatePartialLoader,\n        deps: [HttpClient],\n      },\n      missingTranslationHandler: {\n        provide: MissingTranslationHandler,\n        useFactory: missingTranslationHandler,\n      },\n    }),\n  ],\n  providers: [\n    Title,\n    { provide: LOCALE_ID, useValue: 'en' },\n    { provide: NgbDateAdapter, useClass: NgbDateDayjsAdapter },\n    httpInterceptorProviders,\n  ],\n  declarations: [MainComponent, NavbarComponent, ErrorComponent, PageRibbonComponent, ActiveMenuDirective, FooterComponent],\n  bootstrap: [MainComponent],\n})\nexport class AppModule {\n  constructor(\n    applicationConfigService: ApplicationConfigService,\n    iconLibrary: FaIconLibrary,\n    dpConfig: NgbDatepickerConfig,\n    translateService: TranslateService\n  ) {\n    applicationConfigService.setEndpointPrefix(SERVER_API_URL);\n    registerLocaleData(locale);\n    iconLibrary.addIcons(...fontAwesomeIcons);\n    dpConfig.minDate = { year: dayjs().subtract(100, 'year').year(), month: 1, day: 1 };\n    translateService.setDefaultLang('en');\n    translateService.use('en');\n  }\n}\n","/*\n    Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    They are written in English to avoid character encoding issues (not a perfect solution)\n*/\nexport const LANGUAGES: string[] = [\n  'en',\n  // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as dayjs from 'dayjs';\n\n@Pipe({\n  name: 'formatMediumDatetime',\n})\nexport class FormatMediumDatetimePipe implements PipeTransform {\n  transform(day: dayjs.Dayjs | null | undefined): string {\n    return day ? day.format('D MMM YYYY HH:mm:ss') : '';\n  }\n}\n","import { Route } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nexport const HOME_ROUTE: Route = {\n  path: '',\n  component: HomeComponent,\n  data: {\n    pageTitle: 'home.title',\n  },\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  exports: [FormsModule, CommonModule, NgbModule, InfiniteScrollModule, FontAwesomeModule, ReactiveFormsModule, TranslateModule],\n})\nexport class SharedLibsModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { MissingTranslationHandler, MissingTranslationHandlerParams, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport const translationNotFoundMessage = 'translation-not-found';\n\nexport class MissingTranslationHandlerImpl implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams): string {\n    const key = params.key;\n    return `${translationNotFoundMessage}[${key}]`;\n  }\n}\n\nexport function translatePartialLoader(http: HttpClient): TranslateLoader {\n  return new TranslateHttpLoader(http, 'i18n/', `.json?buildTimestamp=${process.env.BUILD_TIMESTAMP ?? ''}`);\n}\n\nexport function missingTranslationHandler(): MissingTranslationHandler {\n  return new MissingTranslationHandlerImpl();\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthExpiredInterceptor } from 'app/core/interceptor/auth-expired.interceptor';\nimport { ErrorHandlerInterceptor } from 'app/core/interceptor/error-handler.interceptor';\nimport { NotificationInterceptor } from 'app/core/interceptor/notification.interceptor';\n\nexport const httpInterceptorProviders = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthExpiredInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorHandlerInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: NotificationInterceptor,\n    multi: true,\n  },\n];\n","export enum Authority {\n  ADMIN = 'ROLE_ADMIN',\n  USER = 'ROLE_USER',\n}\n","import { Directive, OnInit, ElementRef, Renderer2, Input } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Directive({\n  selector: '[jhiActiveMenu]',\n})\nexport class ActiveMenuDirective implements OnInit {\n  @Input() jhiActiveMenu?: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private translateService: TranslateService) {}\n\n  ngOnInit(): void {\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.updateActiveFlag(event.lang);\n    });\n\n    this.updateActiveFlag(this.translateService.currentLang);\n  }\n\n  updateActiveFlag(selectedLanguage: string): void {\n    if (this.jhiActiveMenu === selectedLanguage) {\n      this.renderer.addClass(this.el.nativeElement, 'active');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'active');\n    }\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}